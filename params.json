{
  "name": "Php-learning",
  "tagline": "PHP Learning",
  "body": "# PHP-Learning\r\n###1.变量\r\nPHP是弱类型语言,在php中使用变量之前不需要声明变量,只需要为变量赋值即可\r\n\r\n```\r\n$tstr = 'string';\r\n```\r\n###2.类型\r\n1.数组\r\nphp中的数组相当于oc中的数组和字典的结合体\r\n定义数组的格式如下:\r\n\r\n```\r\n$array = ('value1','value2');\r\n```\r\n  \r\n```\r\n$arr = ('a',1,'abc');  \r\n```\r\n\r\n使用数组函数array(),\r\n\r\n```\r\n$array[key]='value';\r\n```\r\n例如: `$arr[0] ='a';`\r\n  \r\nkey表示数组的键值,下标从0开始,这段代码的表示给数组变量$arr的第一个元素赋值字符串a;\r\n\r\n```\r\n$arr = array(key1=>value1,key2=>value2....)\r\n```\r\n```\r\n$arr2 = array('name'=>'张三','age'=>'18');\r\n```\r\n###3.常量\r\n定义常量使用define()函数,常量名前面不需要加$符号,按照惯例常量名全部使用大写\r\n\r\n```\r\ndefine (\"NAME\",\"张三\")\r\n```\r\ndefine()函数有3个参数,第一个参数是常量名(NAME),第2个参数是常量的值(张三),第三个参数表示是否区分大小写,默认为true.\r\n\r\n判断一个常量是否存在使用defined()函数,成功返回true,失败返回假.\r\n\r\n```\r\n<?php\r\ndefine(\"NAME\",\"张三\")\r\nif(defined(\"NAME\")) {\r\n\techo NAME;\r\n} else {\r\n\techo \"没有此常量\";\r\n}\r\n?>\r\n```\r\n常量的值只能是标量（boolean ，integer，float 和 string）\r\n###4.运算符\r\n#####1.字符串运算符中的`.`和swift中的`+`一样\r\n#####2.在可以产生值的表达式前使用错误控制运算符，可以忽略因表达式运算错误而产生的错误信息。错误控制运算符是`@`\r\n#####3.执行运算符，PHP将把运算符内的字符作为外壳命令来执行，其作用与shell_exec()函数相同\r\n\r\n```\r\n<?php\r\n    $output = `ifconfig`;\r\n    echo \"<pre>$output</pre>\";\r\n?>\r\n```\r\n###5.break语句\r\nbreak后面可以跟一个数字参数(如:break 1;  break 2; ) 来决定跳出几重循环。break不写参数系统默认是break 1\r\n\r\n###6.函数\r\n1.函数内部调用全局变量只需要在变量前面加上global关键字.\r\n\r\n```\r\n<?php\r\n    $a = 1;\r\n    $b = 2;\r\n    function Sum()\r\n    {\r\n       global $a, $b;\r\n       $b = $a + $b;\r\n    }\r\n    Sum();\r\n    echo $b;\r\n?>\r\n运行结果:3 \r\n```\r\n\r\n###7.数组\r\n\r\n```\r\n<?php\r\n        $arr =array ('name'=>'jim', 'age'=>18, 'sex'=>'男');\r\n        echo $arr['name'];\r\n?>\r\n```\r\n###8.foreach循环\r\n语法格式：\r\n\r\n```\r\nforeach (array as $value){\r\n       循环体语句;\r\n}\r\n```\r\n第一个参数array是待遍历的数组, as是关键字, $value表示每次循环把当前元素的值赋给$value. 这个$value可以是自定义的任意变量,比如你把它定义为$a或他的变量都没有问题,不过我们通常使用默认$value,与swift语言中的forin类似\r\n\r\n\r\n```\r\n<?php\r\n\t\t$arr3 = array('name'=>'jim','age'=>23,'sex'=>'男');\r\n\t\tforeach($arr3 as $value) {\r\n\t\t\t\techo $value;\r\n\t\t}\r\n?>\r\n运算结果: name:jim age:18 sex:男 \r\n```\r\n###9.字符串常用函数\r\n\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}